generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(cuid())
  firstName         String
  lastName          String
  email             String    @unique
  password          String
  avatar            String?   // Added avatar field, nullable
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  emailVerified     Boolean   @default(false)
  verifyToken       String?   @unique
  verifyTokenExpiry DateTime?
  registrationIp    String?
  lastLoginIp       String?
  accounts          Account[]
  sessions          Session[]
}

model OTP {
  id        String   @id @default(cuid())
  type      String
  code      String
  email     String
  ip        String
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@index([email, type])
  @@index([code, type])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  avatar            String? // Added avatar field for provider avatars
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
